-- MySQL Script generated by MySQL Workbench
-- 10/22/14 22:02:11
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema shopping
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `shopping` ;

-- -----------------------------------------------------
-- Schema shopping
-- -----------------------------------------------------
 CREATE SCHEMA IF NOT EXISTS `shopping`--FAULT   CHARACTER SET utf8 COLLATE utf8_general_ci ;
 USE `shopping` ;

-- -----------------------------------------------------
-- Table `shopping`.`Customers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shopping`.`Customers` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(45) NULL,
  `fname` VARCHAR(45) NULL,
  `lname` VARCHAR(45) NULL,
  `email` VARCHAR(45) NULL,
  `password` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `shopping`.`Users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shopping`.`Users` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(45) NULL,
  `fname` VARCHAR(45) NULL,
  `lname` VARCHAR(45) NULL,
  `email` VARCHAR(45) NULL,
  `password` VARCHAR(45) NULL,
  `role` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `username_UNIQUE` (`username` ASC),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `shopping`.`Categories`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shopping`.`Categories` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `shopping`.`Brands`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shopping`.`Brands` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `shopping`.`Items`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shopping`.`Items` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  `description` TEXT(1000) NULL,
  `price` FLOAT NULL,
  `added_at` DATETIME NOT NULL,
  `Categories_id` INT NOT NULL,
  `gender` VARCHAR(45) NULL,
  `Brands_id` INT NOT NULL,
  PRIMARY KEY (`id`, `Categories_id`, `Brands_id`),
  INDEX `fk_Items_Categories1_idx` (`Categories_id` ASC),
  INDEX `fk_Items_Brands1_idx` (`Brands_id` ASC),
  CONSTRAINT `fk_Items_Categories1`
    FOREIGN KEY (`Categories_id`)
    REFERENCES `shopping`.`Categories` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Items_Brands1`
    FOREIGN KEY (`Brands_id`)
    REFERENCES `shopping`.`Brands` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `shopping`.`Reviews`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shopping`.`Reviews` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `message` VARCHAR(1000) NULL,
  `rating` INT NULL,
  `reviewed_at` DATETIME NULL,
  `Customers_id` INT NOT NULL,
  `Items_id` INT NOT NULL,
  PRIMARY KEY (`id`, `Items_id`),
  INDEX `fk_Reviews_Customers_idx` (`Customers_id` ASC),
  INDEX `fk_Reviews_Items1_idx` (`Items_id` ASC),
  CONSTRAINT `fk_Reviews_Customers`
    FOREIGN KEY (`Customers_id`)
    REFERENCES `shopping`.`Customers` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Reviews_Items1`
    FOREIGN KEY (`Items_id`)
    REFERENCES `shopping`.`Items` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `shopping`.`Orders`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shopping`.`Orders` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `Customers_id` INT NOT NULL,
  `purchased_at` DATETIME NULL,
  PRIMARY KEY (`id`, `Customers_id`),
  INDEX `fk_Orders_Customers1_idx` (`Customers_id` ASC),
  CONSTRAINT `fk_Orders_Customers1`
    FOREIGN KEY (`Customers_id`)
    REFERENCES `shopping`.`Customers` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `shopping`.`CreditCards`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shopping`.`CreditCards` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `number` VARCHAR(45) NOT NULL,
  `fname` VARCHAR(45) NULL,
  `lname` VARCHAR(45) NULL,
  `expiry` VARCHAR(45) NOT NULL,
  `Customers_id` INT NOT NULL,
  PRIMARY KEY (`id`, `Customers_id`),
  INDEX `fk_CreditCards_Customers1_idx` (`Customers_id` ASC),
  CONSTRAINT `fk_CreditCards_Customers1`
    FOREIGN KEY (`Customers_id`)
    REFERENCES `shopping`.`Customers` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `shopping`.`Alerts`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shopping`.`Alerts` (
  `id` INT NOT NULL,
  `card_number` VARCHAR(45) NULL,
  `ip_addr` VARCHAR(45) NULL,
  `Customers_id` INT NULL,
  `alerted_at` DATETIME NULL,
  `description` VARCHAR(500) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Alerts_Customers1_idx` (`Customers_id` ASC),
  CONSTRAINT `fk_Alerts_Customers1`
    FOREIGN KEY (`Customers_id`)
    REFERENCES `shopping`.`Customers` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `shopping`.`CustomerAddresses`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shopping`.`CustomerAddresses` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `line_1` VARCHAR(45) NULL,
  `line_2` VARCHAR(45) NULL,
  `city` VARCHAR(45) NULL,
  `state` VARCHAR(45) NULL,
  `zip` VARCHAR(45) NULL,
  `type` VARCHAR(45) NULL,
  `Customers_id` INT NOT NULL,
  PRIMARY KEY (`id`, `Customers_id`),
  INDEX `fk_CustomerAddresses_Customers1_idx` (`Customers_id` ASC),
  CONSTRAINT `fk_CustomerAddresses_Customers1`
    FOREIGN KEY (`Customers_id`)
    REFERENCES `shopping`.`Customers` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `shopping`.`Cart`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shopping`.`Cart` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `quantity` INT NULL,
  `Customers_id` INT NOT NULL,
  `Items_id` INT NOT NULL,
  PRIMARY KEY (`id`, `Customers_id`, `Items_id`),
  INDEX `fk_Cart_Customers1_idx` (`Customers_id` ASC),
  INDEX `fk_Cart_Items1_idx` (`Items_id` ASC),
  CONSTRAINT `fk_Cart_Customers1`
    FOREIGN KEY (`Customers_id`)
    REFERENCES `shopping`.`Customers` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Cart_Items1`
    FOREIGN KEY (`Items_id`)
    REFERENCES `shopping`.`Items` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `shopping`.`HotListCards`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shopping`.`HotListCards` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `number` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `number_UNIQUE` (`number` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `shopping`.`Deal`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shopping`.`Deal` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `discount` FLOAT NULL,
  `description` VARCHAR(1000) NULL,
  `code` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `code_UNIQUE` (`code` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `shopping`.`Deal_has_Items`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shopping`.`Deal_has_Items` (
  `Deal_id` INT NOT NULL,
  `Items_id` INT NOT NULL,
  PRIMARY KEY (`Deal_id`, `Items_id`),
  INDEX `fk_Deal_has_Items_Items1_idx` (`Items_id` ASC),
  INDEX `fk_Deal_has_Items_Deal1_idx` (`Deal_id` ASC),
  CONSTRAINT `fk_Deal_has_Items_Deal1`
    FOREIGN KEY (`Deal_id`)
    REFERENCES `shopping`.`Deal` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Deal_has_Items_Items1`
    FOREIGN KEY (`Items_id`)
    REFERENCES `shopping`.`Items` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `shopping`.`Transactions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shopping`.`Transactions` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `quantity` INT NOT NULL,
  `Items_id` INT NOT NULL,
  `Orders_id` INT NOT NULL,
  PRIMARY KEY (`id`, `Items_id`, `Orders_id`),
  INDEX `fk_Transactions_Items1_idx` (`Items_id` ASC),
  INDEX `fk_Transactions_Orders1_idx` (`Orders_id` ASC),
  CONSTRAINT `fk_Transactions_Items1`
    FOREIGN KEY (`Items_id`)
    REFERENCES `shopping`.`Items` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Transactions_Orders1`
    FOREIGN KEY (`Orders_id`)
    REFERENCES `shopping`.`Orders` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `shopping`;

DELIMITER $$
USE `shopping`$$
$$

USE `shopping`$$
CREATE DEFINER = CURRENT_USER TRIGGER `shopping`.`Items_BEFORE_INSERT` BEFORE INSERT ON `Items` FOR EACH ROW
    BEGIN
	IF NEW.added_at = '0000-00-00 00:00:00' THEN
	SET NEW.added_at = NOW();
	END IF;
    END
    $$

USE `shopping`$$
CREATE DEFINER = CURRENT_USER TRIGGER `shopping`.`Reviews_BEFORE_INSERT` BEFORE INSERT ON `Reviews` FOR EACH ROW
    BEGIN
	IF NEW.reviewed_at = '0000-00-00 00:00:00' THEN
	SET NEW.reviewed_at = NOW();
	END IF;
    END$$

USE `shopping`$$
CREATE DEFINER = CURRENT_USER TRIGGER `shopping`.`Orders_BEFORE_INSERT` BEFORE INSERT ON `Orders` FOR EACH ROW
    BEGIN
	IF NEW.purchased_at = '0000-00-00 00:00:00' THEN
	SET NEW.purchased_at = NOW();
	END IF;
    END$$

USE `shopping`$$
CREATE DEFINER = CURRENT_USER TRIGGER `shopping`.`Alerts_BEFORE_INSERT` BEFORE INSERT ON `Alerts` FOR EACH ROW
    BEGIN
	IF NEW.alerted_at = '0000-00-00 00:00:00' THEN
	SET NEW.alerted_at = NOW();
	END IF;
    END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `shopping`.`Customers`
-- -----------------------------------------------------
START TRANSACTION;
USE `shopping`;
INSERT INTO `shopping`.`Customers` (`id`, `username`, `fname`, `lname`, `email`, `password`) VALUES (NULL, 'riyani@gmail.com', 'Riyani', 'Miranda', 'riyanimm@gmail.com', 'riyani1234');
INSERT INTO `shopping`.`Customers` (`id`, `username`, `fname`, `lname`, `email`, `password`) VALUES (NULL, 'abhiram@gmail.com', 'Abhiram', 'Naidu', 'abhiram@gmail.com', 'abhiram1234');

COMMIT;


-- -----------------------------------------------------
-- Data for table `shopping`.`Users`
-- -----------------------------------------------------
START TRANSACTION;
USE `shopping`;
INSERT INTO `shopping`.`Users` (`id`, `username`, `fname`, `lname`, `email`, `password`, `role`) VALUES (NULL, 'shashank_h@hotmail.com', 'Shashank', 'Hayatnagarkar', 'shashank_h@hotmail.com', 'shashank1234', 'admin');
INSERT INTO `shopping`.`Users` (`id`, `username`, `fname`, `lname`, `email`, `password`, `role`) VALUES (NULL, 'alstendsouza0@gmail.com', 'Alsten', 'Dsouza', 'alstendsouza0@gmail.com', 'alsten1234', 'admin');

COMMIT;


-- -----------------------------------------------------
-- Data for table `shopping`.`Categories`
-- -----------------------------------------------------
START TRANSACTION;
USE `shopping`;
INSERT INTO `shopping`.`Categories` (`id`, `name`) VALUES (1, 'Casual Shirts');
INSERT INTO `shopping`.`Categories` (`id`, `name`) VALUES (2, 'Pants/Trousers');
INSERT INTO `shopping`.`Categories` (`id`, `name`) VALUES (3, 'Formal Shirts');
INSERT INTO `shopping`.`Categories` (`id`, `name`) VALUES (4, 'Flip-Flops');

COMMIT;


-- -----------------------------------------------------
-- Data for table `shopping`.`Brands`
-- -----------------------------------------------------
START TRANSACTION;
USE `shopping`;
INSERT INTO `shopping`.`Brands` (`id`, `name`) VALUES (1, 'Nike');
INSERT INTO `shopping`.`Brands` (`id`, `name`) VALUES (2, 'Adidas');

COMMIT;


-- -----------------------------------------------------
-- Data for table `shopping`.`Items`
-- -----------------------------------------------------
START TRANSACTION;
USE `shopping`;
INSERT INTO `shopping`.`Items` (`id`, `name`, `description`, `price`, `added_at`, `Categories_id`, `gender`, `Brands_id`) VALUES (1, 'High Flyer', 'High Flyser Flip Flops are the most comfortable.', 10, '2014-10-03 12:00:00', 4, 'male', 1);
INSERT INTO `shopping`.`Items` (`id`, `name`, `description`, `price`, `added_at`, `Categories_id`, `gender`, `Brands_id`) VALUES (2, 'Jersey Casuals', 'So Casual!!!', 12, '2014-10-04 12:00:00', 1, 'male', 2);

COMMIT;


-- -----------------------------------------------------
-- Data for table `shopping`.`Deal`
-- -----------------------------------------------------
START TRANSACTION;
USE `shopping`;
INSERT INTO `shopping`.`Deal` (`id`, `discount`, `description`, `code`) VALUES (1, 5, 'Christmas Discount on Casuals', NULL);

COMMIT;


-- -----------------------------------------------------
-- Data for table `shopping`.`Deal_has_Items`
-- -----------------------------------------------------
START TRANSACTION;
USE `shopping`;
INSERT INTO `shopping`.`Deal_has_Items` (`Deal_id`, `Items_id`) VALUES (1, 2);

COMMIT;

